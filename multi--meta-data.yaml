{% import 'virtual-mcp11-ovs/underlay--meta-data.yaml' as CLOUDINIT_META_DATA with context %}
{% import 'virtual-mcp11-ovs/underlay--user-data-cfg01.yaml' as CLOUDINIT_USER_DATA_CFG01 with context %}
{% import 'virtual-mcp11-ovs/underlay--user-data1604.yaml' as CLOUDINIT_USER_DATA_1604 with context %}

---
aliases:
 - &interface_model {{ os_env('INTERFACE_MODEL', 'virtio') }}
 - &cloudinit_meta_data {{ CLOUDINIT_META_DATA }}
 - &cloudinit_user_data_cfg01 {{ CLOUDINIT_USER_DATA_CFG01 }}
 - &cloudinit_user_data_1604 {{ CLOUDINIT_USER_DATA_1604 }}

{% set DOMAIN_NAME = os_env('DOMAIN_NAME', LAB_CONFIG_NAME) + '.local' %}
{% set HOSTNAME_CFG01 = os_env('HOSTNAME_CFG01', 'cfg01.' + DOMAIN_NAME) %}
{% set HOSTNAME_CTL01 = os_env('HOSTNAME_CTL01', 'ctl01.' + DOMAIN_NAME) %}
{% set HOSTNAME_CTL02 = os_env('HOSTNAME_CTL02', 'ctl02.' + DOMAIN_NAME) %}
{% set HOSTNAME_CTL03 = os_env('HOSTNAME_CTL03', 'ctl03.' + DOMAIN_NAME) %}
{% set HOSTNAME_CMP01 = os_env('HOSTNAME_CMP01', 'cmp01.' + DOMAIN_NAME) %}
{% set HOSTNAME_CMP02 = os_env('HOSTNAME_CMP02', 'cmp02.' + DOMAIN_NAME) %}
{% set HOSTNAME_GTW01 = os_env('HOSTNAME_GTW01', 'gtw01.' + DOMAIN_NAME) %}
{% set HOSTNAME_PRX01 = os_env('HOSTNAME_PRX01', 'prx01.' + DOMAIN_NAME) %}


  dynamic_addresses_pool:
    - &pool_default !os_env POOL_DEFAULT, 10.50.0.0/16:24

  default_interface_model:
    - &interface_model !os_env INTERFACE_MODEL, e1000

template:
  devops_settings:
    env_name: {{ os_env( 'ENV_NAME', 'multi_' + ('JOB_DEP_NAME', '')) }}

    address_pools:
      public-pool01:
        net: *pool_default
        params:
          vlan_start: 1210
          ip_reserved:
            gateway: +1
            l2_network_device: +1
          ip_ranges:
            dhcp: [+128, -32]
            rack-01: [+2, +127]
      admin-pool01:
        net: {{ os_env('ADMIN_ADDRESS_POOL01', '10.70.0.0/16:24') }}
        params:
          ip_reserved:
            gateway: +1
            l2_network_device: +1
            default_{{ HOSTNAME_CFG01 }}: +90
            default_{{ HOSTNAME_CTL01 }}: +91
            default_{{ HOSTNAME_CTL02 }}: +92
            default_{{ HOSTNAME_CTL03 }}: +93
            default_{{ HOSTNAME_CMP01 }}: +95
            default_{{ HOSTNAME_CMP02 }}: +96
            default_{{ HOSTNAME_GTW01 }}: +94
            default_{{ HOSTNAME_PRX01 }}: +121
          ip_ranges:
            dhcp: [+90, -10]
            
      tenant-pool01:
        net: {{ os_env('TENANT_ADDRESS_POOL01', '10.80.0.0/16:24') }}
        params:
          ip_reserved:
            gateway: +1
            l2_network_device: +1
            default_{{ HOSTNAME_CFG01 }}: +100
            default_{{ HOSTNAME_CTL01 }}: +101
            default_{{ HOSTNAME_CTL02 }}: +102
            default_{{ HOSTNAME_CTL03 }}: +103
            default_{{ HOSTNAME_CMP01 }}: +105
            default_{{ HOSTNAME_CMP02 }}: +106
            default_{{ HOSTNAME_GTW01 }}: +110
            default_{{ HOSTNAME_PRX01 }}: +121
          ip_ranges:
            dhcp: [+10, -10]

      storage-pool01:
        net: {{ os_env('EXTERNAL_ADDRESS_POOL01', '10.90.0.0/16:24') }}
        params:
          ip_reserved:
            gateway: +1
            l2_network_device: +1
            default_{{ HOSTNAME_CFG01 }}: +100
            default_{{ HOSTNAME_CTL01 }}: +101
            default_{{ HOSTNAME_CTL02 }}: +102
            default_{{ HOSTNAME_CTL03 }}: +103
            default_{{ HOSTNAME_CMP01 }}: +105
            default_{{ HOSTNAME_CMP02 }}: +106
            default_{{ HOSTNAME_GTW01 }}: +110
            default_{{ HOSTNAME_PRX01 }}: +121
          ip_ranges:
            dhcp: [+10, -10]

    groups:
      - name: default
        driver:
          name: devops.driver.libvirt
          params:
            connection_string: !os_env CONNECTION_STRING, qemu:///system
            storage_pool_name: !os_env STORAGE_POOL_NAME, default
            stp: False
            hpet: False
            use_host_cpu: !os_env DRIVER_USE_HOST_CPU, true

        network_pools:
          public: public-pool01
          admin: admin-pool01
          storage: storage-pool01
          tenant: tenant-pool01

        l2_network_devices:
          public:
            address_pool: public-pool01
            dhcp: true
            forward:
              mode: nat

          storage:
            address_pool: storage-pool01
            dhcp: true

          admin:
            address_pool: admin-pool01
            dhcp: true
            forward:
              mode: nat

          tenant:
            address_pool: tenant-pool01
            dhcp: dhcp

        nodes:
          - name: {{ HOSTNAME_CFG01 }}
            role: salt_master
            params: &rack-01-node-params
              vcpu: !os_env SLAVE_NODE_CPU, 2
              memory: !os_env SLAVE_NODE_MEMORY, 2048
              boot:
                - hd
              cloud_init_volume_name: iso
              cloud_init_iface_up: enp0s3
              volumes:
                - name: system
                  capacity: !os_env NODE_VOLUME_SIZE, 50
                  source_image: /var/lib/libvirt/images/xenial-server-cloudimg-amd64-disk1.img  # https://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img
                  format: qcow2
                - name: iso  # Volume with name 'iso' will be used
                             # for store image with cloud-init metadata.
                  capacity: 1
                  format: raw
                  device: cdrom
                  bus: ide
                  cloudinit_meta_data: |
                    # All the data below will be stored as a string object
                    instance-id: iid-local1
                    local-hostname: {hostname}
                    network-interfaces: |
                     auto {interface_name}
                     iface {interface_name} inet static
                     address {address}
                     network {network}
                     netmask {netmask}
                     gateway {gateway}
                     dns-nameservers 8.8.8.8
                  cloudinit_user_data: |
                    #cloud-config, see http://cloudinit.readthedocs.io/en/latest/topics/examples.html
                    # All the data below will be stored as a string object
                    ssh_pwauth: True
                    users:
                     - name: vagrant
                       sudo: ALL=(ALL) NOPASSWD:ALL
                       shell: /bin/bash
                    chpasswd:
                     list: |
                      vagrant:vagrant
                     expire: False
                    bootcmd:
                     # Block access to SSH while node is preparing
                     - cloud-init-per once sudo iptables -A INPUT -p tcp --dport 22 -j DROP
                     # Enable root access
                     - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
                     - service sshd restart 
                    runcmd:
                     # Prepare network connection
                     - sudo ifup {interface_name}
                     - sudo route add default gw {gateway} {interface_name}
                     # Prepare necessary packages on the node
                     - sudo apt-get update
                     - sudo apt-get upgrade -y
                     - sudo apt-get install -y git python-setuptools python-dev python-pip gcc libssl-dev libffi-dev vim software-properties-common
                     - sudo apt-get autoremove -y
                     - sudo pip install -U setuptools pip
                     - sudo pip install 'cryptography>=1.3.2'
                     - sudo pip install 'cffi>=1.6.0'
                     # Node is ready, allow SSH access
                     - sudo iptables -D INPUT -p tcp --dport 22 -j DROP
              interfaces:
                - label: enp0s3
                  l2_network_device: public
                  interface_model: *interface_model
                - label: enp0s4
                  l2_network_device: private
                  interface_model: *interface_model
                - label: enp0s5
                  l2_network_device: storage
                  interface_model: *interface_model
                - label: enp0s6
                  l2_network_device: management
                  interface_model: *interface_model
              network_config:
                enp0s3:
                  networks:
                    - public
                enp0s4:
                  networks:
                    - private
                enp0s5:
                  networks:
                    - storage
                enp0s6:
                  networks:
                    - management

          - name: node-2
            role: k8s
            params: *rack-01-node-params
